worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/json;

    server {
        listen 8080;

        add_header 'Access-Control-Allow-Origin' 'http://localhost:4200' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'http://localhost:4200' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Max-Age' 3600 always;


        location /login {
            if ($request_method = OPTIONS) {
                                    add_header 'Access-Control-Allow-Origin' "http://localhost:4200" always;
                                    add_header 'Access-Control-Allow-Credentials' 'true' always;
                                    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
                                    add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type' always;
                                    add_header 'Access-Control-Max-Age' 3600 always;
                                    return 204;
                                }
            if ($request_method = POST) {
                return 200 '{"username": "Test", "lastLoginAt": "20250517"}';
            }
            return 405 '{"error": "Method Not Allowed"}';
        }

        location /logout {
            if ($request_method = OPTIONS) {
                                    add_header 'Access-Control-Allow-Origin' "http://localhost:4200" always;
                                    add_header 'Access-Control-Allow-Credentials' 'true' always;
                                    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
                                    add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type' always;
                                    add_header 'Access-Control-Max-Age' 3600 always;
                                    return 204;
                                }
            if ($request_method = POST) {
                return 200 'Logged out';
            }
            return 405 '{"error": "Method Not Allowed"}';
        }

        location /updates {
          return 500 '{"error": "I am a dummy"}';
        }

        location /site {
          set $FLAG "";
          if ($request_method = GET) {
            set $FLAG "G";
          }
          if ($request_method = PATCH) {
            set $FLAG "P";
          }
          if ($arg_siteId = '123') {
            set $FLAG "${FLAG}V";
          }
          if ($FLAG = "GV") {
                      return 200 '{
                                  "siteInfo": {
                                    "siteId": "site-001",
                                    "siteName": "Example Site",
                                    "siteUrl": "https://www.examplesite.com",
                                    "lastUpdateAt": "2025-05-18T14:32:00Z"
                                  },
                                  "updates": [
                                    { "registeredAt": "2025-05-18T14:00:00Z", "change": "Added new blog post", "statusCode": "200"},
                                    { "registeredAt": "2025-05-17T13:45:00Z", "change": "Updated homepage banner", "statusCode": "200" },
                                    { "registeredAt": "2025-05-16T13:30:00Z", "change": "Fixed broken links", "statusCode": "200" },
                                    { "registeredAt": "2025-05-15T13:15:00Z", "change": "Refreshed product images", "statusCode": "400" },
                                    { "registeredAt": "2025-05-14T13:00:00Z", "change": "Added FAQ section","statusCode": "400" },
                                    { "registeredAt": "2025-05-13T12:45:00Z", "change": "Improved SEO metadata", "statusCode": "500" },
                                    { "registeredAt": "2025-05-12T12:30:00Z", "change": "Launched new feature", "statusCode": "401" },
                                    { "registeredAt": "2025-05-11T12:15:00Z", "change": "Removed outdated content", "statusCode": "400" },
                                    { "registeredAt": "2025-05-10T12:00:00Z", "change": "Tweaked navigation menu", "statusCode": "300" },
                                    { "registeredAt": "2025-05-09T11:45:00Z", "change": "Minor design updates" , "statusCode": "202"},
                                    { "registeredAt": "2025-05-08T11:30:00Z", "change": "Corrected typos", "statusCode": "300" },
                                    { "registeredAt": "2025-05-07T11:15:00Z", "change": "Adjusted color scheme","statusCode": "500" },
                                    { "registeredAt": "2025-05-06T11:00:00Z", "change": "Updated footer info", "statusCode": "200" },
                                    { "registeredAt": "2025-05-05T10:45:00Z", "change": "Restructured layout", "statusCode": "201" },
                                    { "registeredAt": "2025-05-04T10:30:00Z", "change": "Integrated new API", "statusCode": "403" },
                                    { "registeredAt": "2025-05-03T10:15:00Z", "change": "Improved load time", "statusCode": "200" },
                                    { "registeredAt": "2025-05-02T10:00:00Z", "change": "Content overhaul", "statusCode": "400" },
                                    { "registeredAt": "2025-05-01T09:45:00Z", "change": "Updated user terms", "statusCode": "200" },
                                    { "registeredAt": "2025-04-30T09:30:00Z", "change": "Launched beta section", "statusCode": "500" },
                                    { "registeredAt": "2025-04-29T09:15:00Z", "change": "Initial site launch", "statusCode": "500" }
                                  ],
                                  "trackedSince": "2025-04-29T09:15:00Z",
                                  "description": "This is a sample site used to demonstrate the SiteDetails data structure with a simplified update history."
                                }';
        		}
        	if ($FLAG = "G") {
            return 404 '{"error": "Site not found"}';
          }
          if ($FLAG = "P") {
            return 503 '{"message": "Can\'t delete dummies"}';
          }
        }

        error_page 404 /404.html;
        location = /404.html {
            internal;
            root /usr/share/nginx/html;
        }
    }
}

